View(data_pop)
unique(data_pop$sovereignt)
data_pop[data_pop$sovereignt == 'United States'),]
data_pop[data_pop$sovereignt == 'United States',]
data_pop[data_pop$sovereignt == 'Japan',]
data_global_new_yr_All[data_global_new_yr_All$sovereignt == 'Japan',]
data_global_new_yr_All[data_global_new_yr_All$sovereignt == 'United States',]
data_global_new_yr_All[data_global_new_yr_All$sovereignt == 'United States',]
unique(data_global_new_yr_All$sovereignt)
data_global_yr_new[list.remove, ]
unique(data_global_yr_new$sovereignt)
unique(data_pop$sovereignt)
setwd("C:/Users/zhang/Desktop/Umich W19/SI649/GroupProj/world_map/data")
# data_pop <- read.csv('./data_global_pop.csv', stringsAsFactors = FALSE)
data_pop <- read.csv('./population.csv', stringsAsFactors = FALSE)
data_global <- read.csv('./suicide-death-rates.csv', stringsAsFactors = FALSE)
world_map = ne_countries(returnclass = "sf")
pop_addon <- read.csv('./pop_addon_A.csv', stringsAsFactors = FALSE)
world_map = world_map %>%
select(sovereignt) %>%
filter(sovereignt != "Antarctica") %>%
st_transform(world_map, crs = "+proj=robin")
data_pop = data_pop %>%
mutate(pop_year = year) %>%
transmute(pop_year = pop_year,
sovereignt = country,
pop_sumpop = population) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Tanzania", "United Republic of Tanzania")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "United States", "United States of America")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Congo, Dem. Rep.", "Democratic Republic of the Congo")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Bahamas", "The Bahamas")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Serbia", "Republic of Serbia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Macedonia, FYR", "Macedonia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Slovak Republic", "Slovenia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Russian Federation", "Russia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Congo, Rep.", "Republic of the Congo")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Kyrgyz Republic", "Kyrgyzstan")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Lao", "Laos")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Swaziland", "eSwatini")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Cote d'Ivoire", "Ivory Coast")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Timor-Leste", "East Timor"))
data_global = data_global %>%
mutate(sovereignt = Entity) %>%
mutate(year = Year) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Tanzania", "United Republic of Tanzania")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "United States", "United States of America")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Congo, Dem. Rep.", "Democratic Republic of the Congo")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Bahamas", "The Bahamas")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Serbia", "Republic of Serbia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Macedonia, FYR", "Macedonia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Slovak Republic", "Slovenia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Russian Federation", "Russia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Congo, Rep.", "Republic of the Congo")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Kyrgyz Republic", "Kyrgyzstan")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Lao", "Laos")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Swaziland", "eSwatini")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Cote d'Ivoire", "Ivory Coast")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Timor-Leste", "East Timor")) %>%
transmute(sovereignt = sovereignt,
global_year = year,
suicide_rate_per1k = suicide_rate_per1k)
pop_addon = pop_addon %>%
transmute(sovereignt = country,
pop_addon = population)
data_global[data_global$sovereignt == 'Russia',]
names(data_pop) #pop
names(data_global) #scd rate
names(world_map) # country
names(pop_addon) # pop_addon
### test: check country name --------------------------------------------------------
country_world = world_map$sovereignt
country_list = data_global$sovereignt
country_list[1]
country_list[1] %in% country_world
na_list = c()
for(i in country_list){
if(i %in% country_world == FALSE){
# print(i)
if(i %in% na_list == FALSE){
na_list = c(na_list, i) # not in country_world
}
}
}
na_list #67
length(na_list)
add_list = c()
for(i in country_world){
# print(i)
if(i %in% country_list == FALSE){
print(i)
if(i %in% add_list == FALSE){
add_list = c(add_list, i) # not in country_world
}
}
}
add_list #10
# preparing -------------------------------------------------------------------
yr = 2000
data_global_yr = data_global %>%
filter(global_year == yr)
data_pop_yr = data_pop %>%
filter(pop_year == yr)
data_global_yr_new = left_join(world_map, data_global_yr, by = "sovereignt")  %>%
left_join(data_pop_yr[,c('sovereignt', 'pop_year','pop_sumpop')], by = 'sovereignt')
data_global_tmp = data_global_yr_new
data_global_new_yr_All = data_global_yr_new
list.remove = c()
for(i in 1:dim(data_global_tmp)[1]){
if(data_global_tmp[i,]$sovereignt %in% pop_addon$sovereignt &
is.na(data_global_tmp[i,]$pop_sumpop)){
index_pop = which(data_global_tmp[i,]$sovereignt == pop_addon$sovereignt)
data_global_new_yr_All$pop_sumpop[i] = pop_addon$pop_addon[index_pop]
# data_global_new_yr_All$suicide_rate_per1k.x[i] = NA
}
if(is.na(data_global_new_yr_All$pop_sumpop[i])){
list.remove = c(list.remove, i)
}
}
data_global_new_yr_All = data_global_new_yr_All[-(list.remove),]
world_carto1 = cartogram_cont(data_global_new_yr_All, "pop_sumpop", maxSizeError = 1.5)
tm_shape(world_carto1) + tm_fill("suicide_rate_per1k", style="jenks") + tm_layout(frame=F)
data_global_new_yr_All[data_global_new_yr_All$sovereignt == 'United States', ]
unique(data_global_new_yr_All$sovereignt)
data_global_new_yr_All[data_global_new_yr_All$sovereignt == 'United States of America', ]
data_global_new_yr_All[data_global_new_yr_All$sovereignt == 'Japan', ]
data_global_new_yr_All[data_global_new_yr_All$sovereignt == 'Canada', ]
# shp
st_write(obj = world_carto1, dsn = toString(yr), layer="scd_glb", driver="ESRI Shapefile")
warnings()
scd_glb_yr <- function(yr, data_global, data_pop, world_map){
data_global_yr = data_global %>%
filter(global_year == yr)
data_pop_yr = data_pop %>%
filter(pop_year == yr)
data_global_yr_new = left_join(world_map, data_global_yr, by = "sovereignt")  %>%
left_join(data_pop_yr[,c('sovereignt', 'pop_year','pop_sumpop')], by = 'sovereignt')
data_global_tmp = data_global_yr_new
data_global_new_yr_All = data_global_yr_new
list.remove = c()
for(i in 1:dim(data_global_tmp)[1]){
if(data_global_tmp[i,]$sovereignt %in% pop_addon$sovereignt &
is.na(data_global_tmp[i,]$pop_sumpop)){
index_pop = which(data_global_tmp[i,]$sovereignt == pop_addon$sovereignt)
data_global_new_yr_All$pop_sumpop[i] = pop_addon$pop_addon[index_pop]
# data_global_new_yr_All$suicide_rate_per1k.x[i] = NA
}
if(is.na(data_global_new_yr_All$pop_sumpop[i])){
list.remove = c(list.remove, i)
}
}
data_global_new_yr_All = data_global_new_yr_All[-(list.remove),]
#!!!!
# Cartogram
world_carto1 = cartogram_cont(data_global_new_yr_All, "sum_population", maxSizeError = 1.5)
# world_carto1 = cartogram_cont(data_global_new_yr_All, "sum_population", itermax = 2)
tm_shape(world_carto1) + tm_fill("suicide_rate_per1k", style="jenks") + tm_layout(frame=F)
# shp
st_write(obj = world_carto1, dsn = toString(yr), layer=sprintf("scd_glb%d", yr), driver="ESRI Shapefile")
}
yr = 2000
yr = 1999
scd_glb_yr(yr, data_global, data_pop, world_map)
scd_glb_yr <- function(yr, data_global, data_pop, world_map){
data_global_yr = data_global %>%
filter(global_year == yr)
data_pop_yr = data_pop %>%
filter(pop_year == yr)
data_global_yr_new = left_join(world_map, data_global_yr, by = "sovereignt")  %>%
left_join(data_pop_yr[,c('sovereignt', 'pop_year','pop_sumpop')], by = 'sovereignt')
data_global_tmp = data_global_yr_new
data_global_new_yr_All = data_global_yr_new
list.remove = c()
for(i in 1:dim(data_global_tmp)[1]){
if(data_global_tmp[i,]$sovereignt %in% pop_addon$sovereignt &
is.na(data_global_tmp[i,]$pop_sumpop)){
index_pop = which(data_global_tmp[i,]$sovereignt == pop_addon$sovereignt)
data_global_new_yr_All$pop_sumpop[i] = pop_addon$pop_addon[index_pop]
# data_global_new_yr_All$suicide_rate_per1k.x[i] = NA
}
if(is.na(data_global_new_yr_All$pop_sumpop[i])){
list.remove = c(list.remove, i)
}
}
data_global_new_yr_All = data_global_new_yr_All[-(list.remove),]
#!!!!
# Cartogram
world_carto1 = cartogram_cont(data_global_new_yr_All, "pop_sumpop", maxSizeError = 1.5)
tm_shape(world_carto1) + tm_fill("suicide_rate_per1k", style="jenks") + tm_layout(frame=F)
# shp
st_write(obj = world_carto1, dsn = toString(yr), layer=sprintf("scd_glb%d", yr), driver="ESRI Shapefile")
}
yr = 1999
scd_glb_yr(yr, data_global, data_pop, world_map)
yr = 2000
scd_glb_yr(yr, data_global, data_pop, world_map)
for(yr in seq(1980,2016,1)){
scd_glb_yr(yr, data_global, world_map)
}
for(yr in seq(1980,2016,1)){
scd_glb_yr(yr, data_global, data_pop, world_map)
}
for(yr in seq(1999,2000,1)){
scd_glb_yr(yr, data_global, data_pop, world_map)
}
library(cartogram)
library(tmap)
library(maptools)
library(rgdal)
library(dplyr)
### Load data -----------------------------------------------------------------
setwd("C:/Users/zhang/Desktop/Umich W19/SI649/GroupProj/world_map/data")
data_pop <- read.csv('./data_global_pop.csv', stringsAsFactors = FALSE)
data_global <- read.csv('./suicide-death-rates.csv', stringsAsFactors = FALSE)
world_map = ne_countries(returnclass = "sf")
pop_addon <- read.csv('./pop_addon_A.csv', stringsAsFactors = FALSE)
world_map = world_map %>%
select(sovereignt) %>%
filter(sovereignt != "Antarctica") %>%
st_transform(world_map, crs = "+proj=robin")
data_pop = data_pop %>%
mutate(pop_year = year) %>%
transmute(pop_year = pop_year,
sovereignt = sovereignt,
pop_sumpop = sum_population)
data_global = data_global %>%
mutate(sovereignt = Entity) %>%
mutate(year = Year) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Tanzania", "United Republic of Tanzania")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "United States", "United States of America")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Congo, Dem. Rep.", "Democratic Republic of the Congo")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Bahamas", "The Bahamas")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Serbia", "Republic of Serbia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Macedonia, FYR", "Macedonia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Slovak Republic", "Slovenia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Russian Federation", "Russia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Congo, Rep.", "Republic of the Congo")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Kyrgyz Republic", "Kyrgyzstan")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Lao", "Laos")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Swaziland", "eSwatini")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Cote d'Ivoire", "Ivory Coast")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Timor-Leste", "East Timor")) %>%
transmute(sovereignt = sovereignt,
global_year = year,
suicide_rate_per1k = suicide_rate_per1k)
pop_addon = pop_addon %>%
transmute(sovereignt = country,
pop_addon = population)
data_global[data_global$sovereignt == 'Russia',]
names(data_pop) #pop
names(data_global) #scd rate
names(world_map) # country
names(pop_addon) # pop_addon
### test: check country name --------------------------------------------------------
country_world = world_map$sovereignt
country_list = data_global$sovereignt
country_list[1]
country_list[1] %in% country_world
na_list = c()
for(i in country_list){
if(i %in% country_world == FALSE){
# print(i)
if(i %in% na_list == FALSE){
na_list = c(na_list, i) # not in country_world
}
}
}
na_list #67
length(na_list)
add_list = c()
for(i in country_world){
# print(i)
if(i %in% country_list == FALSE){
print(i)
if(i %in% add_list == FALSE){
add_list = c(add_list, i) # not in country_world
}
}
}
add_list #10
# write.csv(x = cbind(na_list), file = sprintf('country_na.csv'))
# write.csv(x = cbind(country_world), file = sprintf('country_world.csv'))
# preparing -------------------------------------------------------------------
yr = 2000
data_global_yr = data_global %>%
filter(global_year == yr)
data_pop_yr = data_pop %>%
filter(pop_year == yr)
data_global_yr_new = left_join(world_map, data_global_yr, by = "sovereignt")  %>%
left_join(data_pop_yr[,c('sovereignt', 'pop_year','pop_sumpop')], by = 'sovereignt')
data_global_tmp = data_global_yr_new
data_global_new_yr_All = data_global_yr_new
list.remove = c()
for(i in 1:dim(data_global_tmp)[1]){
if(data_global_tmp[i,]$sovereignt %in% pop_addon$sovereignt &
is.na(data_global_tmp[i,]$pop_sumpop)){
index_pop = which(data_global_tmp[i,]$sovereignt == pop_addon$sovereignt)
data_global_new_yr_All$pop_sumpop[i] = pop_addon$pop_addon[index_pop]
# data_global_new_yr_All$suicide_rate_per1k.x[i] = NA
}
if(is.na(data_global_new_yr_All$pop_sumpop[i])){
list.remove = c(list.remove, i)
}
}
data_global_new_yr_All = data_global_new_yr_All[-(list.remove),]
world_carto1 = cartogram_cont(data_global_new_yr_All, "pop_sumpop", maxSizeError = 1.5)
tm_shape(world_carto1) + tm_fill("suicide_rate_per1k", style="jenks") + tm_layout(frame=F)
# Cartogram -------------------------------------------------------------------
world_carto1 = cartogram_cont(data_global_new_yr_All, "pop_sumpop", maxSizeError = 1.5)
# world_carto1 = cartogram_cont(data_global_new_yr_All, "sum_population", itermax = 2)
tm_shape(world_carto1) + tm_fill("suicide_rate_per1k", style="jenks") + tm_layout(frame=F)
# shp
st_write(obj = world_carto1, dsn = toString(yr), layer="scd_glb", driver="ESRI Shapefile")
# RDS
saveRDS(world_carto1, file = "shape_Work_V2.RData")
world_carto1 = readRDS(file = "shape_Work_V2.RData")
### generate files  -----------------------------------------------------------
scd_glb_yr <- function(yr, data_global, world_map){
data_global_yr = data_global %>%
filter(year == yr)
data_global_yr_new = left_join(world_map, data_global_yr, by = "sovereignt") #%>%
data_global_tmp = data_global_yr_new
data_global_new_yr_All = data_global_yr_new
list.remove = c()
for(i in 1:dim(data_global_tmp)[1]){
if(data_global_tmp[i,]$sovereignt %in% pop_addon$country &
is.na(data_global_tmp[i,]$year)){
index_pop = which(data_global_tmp[i,]$sovereignt == pop_addon$country)
data_global_new_yr_All$sum_population[i] = pop_addon$population[index_pop]
data_global_new_yr_All$suicide_rate_per1k[i] = NA
}
if(is.na(data_global_new_yr_All$sum_population[i])){
list.remove = c(list.remove, i)
}
}
data_global_new_yr_All = data_global_new_yr_All[-(list.remove),]
# Cartogram
world_carto1 = cartogram_cont(data_global_new_yr_All, "sum_population", maxSizeError = 1.5)
# world_carto1 = cartogram_cont(data_global_new_yr_All, "sum_population", itermax = 2)
tm_shape(world_carto1) + tm_fill("suicide_rate_per1k", style="jenks") + tm_layout(frame=F)
# shp
st_write(obj = world_carto1, dsn = toString(yr), layer=sprintf("scd_glb%d", yr), driver="ESRI Shapefile")
}
yr = 2000
scd_glb_yr(yr, data_global, world_map)
for(yr in seq(1995,1998,1)){
scd_glb_yr(yr, data_global, world_map)
}
scd_glb_yr <- function(yr, data_global, world_map){
data_global_yr = data_global %>%
filter(global_year == yr)
data_global_yr_new = left_join(world_map, data_global_yr, by = "sovereignt") #%>%
data_global_tmp = data_global_yr_new
data_global_new_yr_All = data_global_yr_new
list.remove = c()
for(i in 1:dim(data_global_tmp)[1]){
if(data_global_tmp[i,]$sovereignt %in% pop_addon$country &
is.na(data_global_tmp[i,]$year)){
index_pop = which(data_global_tmp[i,]$sovereignt == pop_addon$country)
data_global_new_yr_All$sum_population[i] = pop_addon$population[index_pop]
data_global_new_yr_All$suicide_rate_per1k[i] = NA
}
if(is.na(data_global_new_yr_All$sum_population[i])){
list.remove = c(list.remove, i)
}
}
data_global_new_yr_All = data_global_new_yr_All[-(list.remove),]
# Cartogram
world_carto1 = cartogram_cont(data_global_new_yr_All, "sum_population", maxSizeError = 1.5)
# world_carto1 = cartogram_cont(data_global_new_yr_All, "sum_population", itermax = 2)
tm_shape(world_carto1) + tm_fill("suicide_rate_per1k", style="jenks") + tm_layout(frame=F)
# shp
st_write(obj = world_carto1, dsn = toString(yr), layer=sprintf("scd_glb%d", yr), driver="ESRI Shapefile")
}
yr = 2000
scd_glb_yr(yr, data_global, world_map)
library(cartogram)
library(tmap)
library(maptools)
library(rgdal)
library(dplyr)
### Load data -----------------------------------------------------------------
setwd("C:/Users/zhang/Desktop/Umich W19/SI649/GroupProj/world_map/data")
data_global <- read.csv('./data_global.csv', stringsAsFactors = FALSE)
world_map = ne_countries(returnclass = "sf")
pop_addon <- read.csv('./pop_addon_A.csv', stringsAsFactors = FALSE)
world_map = world_map %>%
select(sovereignt) %>%
filter(sovereignt != "Antarctica") %>%
st_transform(world_map, crs = "+proj=robin")
data_global = data_global %>%
mutate(sovereignt = country) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Tanzania", "United Republic of Tanzania")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "United States", "United States of America")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Congo, Dem. Rep.", "Democratic Republic of the Congo")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Bahamas", "The Bahamas")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Serbia", "Republic of Serbia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Macedonia, FYR", "Macedonia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Slovak Republic", "Slovenia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Russian Federation", "Russia")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Congo, Rep.", "Republic of the Congo")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Kyrgyz Republic", "Kyrgyzstan")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Lao", "Laos")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Swaziland", "eSwatini")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Cote d'Ivoire", "Ivory Coast")) %>%
mutate(sovereignt = replace(sovereignt, sovereignt == "Timor-Leste", "East Timor"))
data_global[data_global$sovereignt == 'Russia',]
### test: check country name --------------------------------------------------------
country_world = world_map$sovereignt
country_list = data_global$sovereignt
country_list[1]
country_list[1] %in% country_world
na_list = c()
for(i in country_list){
if(i %in% country_world == FALSE){
# print(i)
if(i %in% na_list == FALSE){
na_list = c(na_list, i) # not in country_world
}
}
}
na_list #20
add_list = c()
for(i in country_world){
# print(i)
if(i %in% country_list == FALSE){
print(i)
if(i %in% add_list == FALSE){
add_list = c(add_list, i) # not in country_world
}
}
}
add_list #89
# write.csv(x = cbind(na_list), file = sprintf('country_na.csv'))
# write.csv(x = cbind(country_world), file = sprintf('country_world.csv'))
write.csv(x = data_global, file = sprintf('data_global_pop.csv'))
# preparing -------------------------------------------------------------------
yr = 2000
data_global_yr = data_global %>%
filter(year == yr)
data_global_yr_new = left_join(world_map, data_global_yr, by = "sovereignt") #%>%
data_global_tmp = data_global_yr_new
data_global_new_yr_All = data_global_yr_new
list.remove = c()
for(i in 1:dim(data_global_tmp)[1]){
if(data_global_tmp[i,]$sovereignt %in% pop_addon$country &
is.na(data_global_tmp[i,]$year)){
index_pop = which(data_global_tmp[i,]$sovereignt == pop_addon$country)
data_global_new_yr_All$sum_population[i] = pop_addon$population[index_pop]
data_global_new_yr_All$suicide_rate_per1k[i] = NA
}
if(is.na(data_global_new_yr_All$sum_population[i])){
list.remove = c(list.remove, i)
}
}
data_global_new_yr_All = data_global_new_yr_All[-(list.remove),]
scd_glb_yr <- function(yr, data_global, world_map){
data_global_yr = data_global %>%
filter(year == yr)
data_global_yr_new = left_join(world_map, data_global_yr, by = "sovereignt") #%>%
data_global_tmp = data_global_yr_new
data_global_new_yr_All = data_global_yr_new
list.remove = c()
for(i in 1:dim(data_global_tmp)[1]){
if(data_global_tmp[i,]$sovereignt %in% pop_addon$country &
is.na(data_global_tmp[i,]$year)){
index_pop = which(data_global_tmp[i,]$sovereignt == pop_addon$country)
data_global_new_yr_All$sum_population[i] = pop_addon$population[index_pop]
data_global_new_yr_All$suicide_rate_per1k[i] = NA
}
if(is.na(data_global_new_yr_All$sum_population[i])){
list.remove = c(list.remove, i)
}
}
data_global_new_yr_All = data_global_new_yr_All[-(list.remove),]
# Cartogram
world_carto1 = cartogram_cont(data_global_new_yr_All, "sum_population", maxSizeError = 1.5)
# world_carto1 = cartogram_cont(data_global_new_yr_All, "sum_population", itermax = 2)
tm_shape(world_carto1) + tm_fill("suicide_rate_per1k", style="jenks") + tm_layout(frame=F)
# shp
st_write(obj = world_carto1, dsn = toString(yr), layer=sprintf("scd_glb%d", yr), driver="ESRI Shapefile")
}
yr = 2000
scd_glb_yr(yr, data_global, world_map)
for(yr in seq(1995,1998,1)){
scd_glb_yr(yr, data_global, world_map)
}
yr = 1999
scd_glb_yr(yr, data_global, world_map)
yr = 2000
scd_glb_yr(yr, data_global, world_map)
# data_pop <- read.csv('./data_global_pop.csv', stringsAsFactors = FALSE)
data_pop <- read.csv('./population.csv', stringsAsFactors = FALSE)
View(data_pop)
View(data_pop)
tmp = seq(0.1, 1, 0.1)
tmp
tmp^0.5
plot(tmp^0.5)
plot(cbind(tmp^0.5, tmp))
cbind(tmp^0.5, tmp)
cbind(tmp^2, tmp)
tmp = seq(0.1, 1, 0.1)
test = cbind(tmp^2, tmp)
plot(test)
?plot
base::plot
plot(x = test[,1], y = test[,2], xlim = c(0,1) )
plot(x = test[,1], y = test[,2], xlim = c(0,1), ylim = c(0,1) )
test = cbind(log(tmp), tmp)
plot(x = test[,1], y = test[,2], xlim = c(0,1), ylim = c(0,1) )
setwd("C:/Users/zhang/Desktop/Umich W19/SI649/GroupProj/Demo/data")
data_pop <- read.csv('./population.csv', stringsAsFactors = FALSE)
